{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","res","data","newPerson","post","personId","delete","id","put","Filter","search","handleSearchInput","handleSearch","value","onChange","AddPersonForm","addPerson","handleNameInput","newName","newNumber","handleNumberInput","onSubmit","type","PersonDetails","persons","handleRemove","map","person","key","name","number","onClick","Message","msg","text","className","isError","App","useState","filteredPersons","setFilteredPersons","setNewName","setNewNumber","setSearch","allPersons","setAllPersons","setMsg","useEffect","PersonServices","initialPersons","catch","err","setNewMesg","newMessage","setTimeout","term","filterResult","filter","p","toLowerCase","includes","event","target","preventDefault","already_exists","length","oldPerson","window","confirm","changedPerson","console","log","personFromServer","concat","nameToDel","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d7a237c.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst baseUrl = \"http://localhost:3001/persons\";\n\nconst getAll = () => {\n  return axios.get(baseUrl).then((res) => res.data);\n};\n\nconst create = (newPerson) => {\n  return axios.post(baseUrl, newPerson).then((res) => res.data);\n};\n\nconst update = (id, newPerson) => {\n  return axios.put(`${baseUrl}/${id}`, newPerson).then((res) => res.data);\n};\n\nconst remove = (personId) => {\n  return axios.delete(`${baseUrl}/${personId}`);\n};\n\nexport default { getAll, create, remove, update };\n","import React, { useState, useEffect } from \"react\";\nimport PersonServices from \"./services/persons\";\nimport \"./App.css\";\n\nconst Filter = ({ search, handleSearchInput, handleSearch }) => {\n  return (\n    <div>\n      Filter shown with <input value={search} onChange={handleSearchInput} />\n    </div>\n  );\n};\n\nconst AddPersonForm = ({\n  addPerson,\n  handleNameInput,\n  newName,\n  newNumber,\n  handleNumberInput,\n}) => {\n  return (\n    <form onSubmit={addPerson}>\n      <h4>Add a new</h4>\n      <div>\n        Name: <input value={newName} onChange={handleNameInput} />\n      </div>\n      <div>\n        Number: <input value={newNumber} onChange={handleNumberInput} />\n      </div>\n      <div>\n        <button type=\"submit\">Add</button>\n      </div>\n    </form>\n  );\n};\n\nconst PersonDetails = ({ persons, handleRemove }) => {\n  return (\n    <div>\n      <h2>Numbers</h2>\n      {persons.map((person) => (\n        <li key={person.id}>\n          {person.name} {person.number}{\" \"}\n          <button onClick={() => handleRemove(person.id)}>Delete</button>\n        </li>\n      ))}\n    </div>\n  );\n};\n\nconst Message = ({ msg }) => {\n  return (\n    <div>\n      {msg.text !== \"\" ? (\n        <div className={msg.isError === true ? \"error\" : \"success\"}>\n          <h2>{msg.text}</h2>\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n};\n\nconst App = () => {\n  // this state is used to store the current/filtered details of phonebook\n  const [filteredPersons, setFilteredPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n\n  // This state is used to store entire details of persons from phonebook\n  const [allPersons, setAllPersons] = useState(filteredPersons);\n\n  // State to store messages\n  const [msg, setMsg] = useState({ text: \"\", isError: false });\n\n  useEffect(() => {\n    PersonServices.getAll()\n      .then((initialPersons) => {\n        setFilteredPersons(initialPersons);\n        setAllPersons(initialPersons);\n      })\n      .catch((err) => {\n        setNewMesg({\n          text: \"some error occured\",\n          isError: true,\n        });\n      });\n  }, []);\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    const already_exists = allPersons.filter((p) => p.name === newName);\n\n    if (already_exists.length) {\n      // Its supposed to be backticks and not a quote for string formatting\n      // window.alert(`'${newName}' is already added to phonebook`);\n\n      const oldPerson = already_exists[0];\n      const resp = window.confirm(\n        `${newName} is already added to Phonebook. Replace old number?`\n      );\n\n      if (resp === true) {\n        PersonServices.update(oldPerson.id, {\n          ...oldPerson,\n          number: newNumber,\n        })\n          .then((changedPerson) => {\n            setFilteredPersons(\n              filteredPersons.map((p) =>\n                p.id !== oldPerson.id ? p : changedPerson\n              )\n            );\n            setAllPersons(\n              allPersons.map((p) => (p.id !== oldPerson.id ? p : changedPerson))\n            );\n            setNewMesg({\n              text: \"Successfully updated\",\n              isError: false,\n            });\n          })\n          .catch((err) => {\n            setNewMesg({\n              text: `${oldPerson.name} could not be updated`,\n              isError: true,\n            });\n          });\n      } else {\n        console.log(\"Opted not to update\");\n      }\n    } else {\n      const newPerson = {\n        // Since state variable filteredPersons is used to store the filtered results\n        // It should not be used when adding a new phonebook contact\n        // allPersons should be used\n        name: newName,\n        number: newNumber,\n      };\n\n      PersonServices.create(newPerson)\n        .then((personFromServer) => {\n          // When adding a new phoneboo contact, update both filteredPersons and\n          // allPersons so that the results get updated\n          if (\n            personFromServer.name.toLowerCase().includes(search.toLowerCase())\n          ) {\n            setFilteredPersons(filteredPersons.concat(personFromServer));\n          }\n          setAllPersons(allPersons.concat(personFromServer));\n          setNewMesg({\n            text: \"Successfully added\",\n            isError: false,\n          });\n          setNewName(\"\");\n          setNewNumber(\"\");\n        })\n        .catch((err) => {\n          setNewMesg({\n            text: `${newName} could not be added`,\n            isError: true,\n          });\n        });\n    }\n  };\n\n  const setNewMesg = (newMessage) => {\n    setMsg(newMessage);\n\n    setTimeout(() => {\n      setMsg({\n        text: \"\",\n        isError: false,\n      });\n    }, 5000);\n  };\n\n  const handleRemove = (id) => {\n    const nameToDel = allPersons.filter((p) => p.id === id)[0].name;\n    const resp = window.confirm(`Delete ${nameToDel}`);\n\n    if (resp === true) {\n      PersonServices.remove(id)\n        .then((res) => {\n          setFilteredPersons(filteredPersons.filter((p) => p.id !== id));\n          setAllPersons(allPersons.filter((p) => p.id !== id));\n          setNewMesg({\n            text: \"Successfully deleted\",\n            isError: false,\n          });\n        })\n        .catch((err) => {\n          setNewMesg({\n            text: `Information of ${nameToDel} has already been removed from server`,\n            isError: true,\n          });\n        });\n    } else {\n      console.log(\"Opted not to delete\");\n    }\n  };\n\n  const handleNameInput = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberInput = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const handleSearchInput = (event) => {\n    setSearch(event.target.value);\n    handleSearch(event.target.value);\n  };\n\n  const handleSearch = (term) => {\n    // To make the search case insensitive, each string is\n    // converted to lowercase. string1.includes(string2) returns True\n    // when string2 is a substring of string1\n    const filterResult = allPersons.filter((p) =>\n      p.name.toLowerCase().includes(term.toLowerCase())\n    );\n    setFilteredPersons(filterResult);\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Message msg={msg} />\n      <Filter\n        search={search}\n        handleSearchInput={handleSearchInput}\n        handleSearch={handleSearch}\n      />\n\n      <AddPersonForm\n        newName={newName}\n        handleNameInput={handleNameInput}\n        newNumber={newNumber}\n        handleNumberInput={handleNumberInput}\n        addPerson={addPerson}\n      />\n      <PersonDetails persons={filteredPersons} handleRemove={handleRemove} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}